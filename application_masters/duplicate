from health_management.models import *
import uuid
import datetime

from health_management.models import *
for i in Diagnosis.objects.all():
    i.save()
    
dgs = Diagnosis.objects.filter()
for d in dgs:
    curr_dt = datetime.datetime.now().strftime("%Y%m%d%H%M%S%f")
    uuid_id = str(curr_dt) + "-" + str(uuid.uuid4())
    dgs = Diagnosis.objects.filter(id=d.id).update(uuid=uuid_id)


from health_management.models import *
from django.db.models import Count
duplicates = Patients.objects.values('patient_id').annotate(Count('id')).order_by().filter(id__count__gt=1)
for duplicate in duplicates:
    pt = Patients.objects.filter(patient_id=duplicate['patient_id']).values_list('id', flat=True).order_by('server_created_on').first()
    gpt = Patients.objects.filter(id=pt).update(status=1)
    print('Done')


from health_management.models import *
clinic_data = ClinicProfile.objects.filter(status=2)
for cd in clinic_data:
    clk_data = ClinicProfile.objects.filter(code=cd.code).values('visit_date', 'code', 'height', 'weight').order_by('visit_date').first()
    if clk_data['height'] != '':
        ClinicProfile.objects.filter(status=2, code=clk_data['code']).update(
        height=clk_data['height'].replace('.', ''))
        ClinicProfile.objects.filter(status=2, code=clk_data['code']).update(
        height=clk_data['height'].replace(',', ''))

from health_management.models import *
clinic_data = ClinicProfile.objects.filter(status=2)
for cd in clinic_data:
    clk_data = ClinicProfile.objects.filter(code=cd.code).values('visit_date', 'code', 'height', 'weight').order_by('visit_date').first()
    if clk_data['height'] != '':
        ClinicProfile.objects.filter(status=2, code=clk_data['code']).update(
        height=clk_data['height'].replace(',', ''))

from health_management.models import *
clinic_data = ClinicProfile.objects.filter(status=2)
import decimal
for cd in clinic_data:
    clk_data = ClinicProfile.objects.filter(code=cd.code).values('visit_date', 'code', 'height', 'weight').order_by('visit_date').first()
    Patients.objects.filter(status=2, patient_id=clk_data['code']).update(
        registered_date=clk_data['visit_date'])
    if clk_data['height'] != '':
        Patients.objects.filter(status=2, patient_id=clk_data['code']).update(
        height=int(clk_data['height']))
    if clk_data['weight'] != '':
        Patients.objects.filter(status=2, patient_id=clk_data['code']).update(
        weight=decimal.Decimal(clk_data['weight'].replace(',', '.')))

patients_ids=Patients.objects.filter(status=2).values_list('uuid', flat=True)
treatments_ids=Treatments.objects.exclude(status=2, patient_uuid__in=patients_ids)

from health_management.models import *
import pandas as pd
pf = pd.read_excel(r'/home/sb-010/Downloads/Mistake_Data.xlsx')
for p in pf.iterrows():
    pts = Patients.objects.filter(patient_id=p[1]['patient'], status=2).values_list('uuid', flat=True).first()
    if pts:
        Treatments.objects.filter(patient_uuid=p[1]['uuid']).update(patient_uuid=pts)
        Prescription.objects.filter(patient_uuid=p[1]['uuid']).update(patient_uuid=pts)
        Scanned_Report.objects.filter(patient_uuid=p[1]['uuid']).update(patient_uuid=pts)
        HomeVisit.objects.filter(patient_uuid=p[1]['uuid']).update(patient_uuid=pts)

from health_management.models import *
import pandas as pd
df = pd.read_excel(r'/home/sb-010/Downloads/Mistake_Data2.xlsx')
for d in df.iterrows():
    pts = Patients.objects.filter(patient_id=d[1]['patient'], status=2).values_list('uuid', flat=True).first()
    if pts:
        Diagnosis.objects.filter(patient_uuid=d[1]['uuid']).update(patient_uuid=pts)


from health_management.models import *
import pandas as pd

pf = pd.read_excel(r'/home/sb-010/Downloads/mistake data.xlsx')
for i in pf.iterrows():
    pts = Patients.objects.filter(patient_id=i[1]['patient'], status=2).values_list('uuid', flat=True).first()
    print(pts,'----')

from health_management.models import *
dgs = Diagnosis.objects.exclude(years__icontains='-')
for i in dgs:
    if i.years:
        print(i.years)
        mm_yy = '1-' + i.years
        Diagnosis.objects.filter(id=i.id).update(years=mm_yy)
        a+=1
print(a)

print(a)
from health_management.models import *
dgs = Diagnosis.objects.filter()
for i in dgs:
    if i.years:
        pp = i.years.split('-')[1]
        pl = i.years.split('-')[0]
        if len(pp) < 3:
            if int(pp) < 10:
                yy_200 = pl+'-200'+ pp
                Diagnosis.objects.filter(id=i.id).update(years=yy_200)
            if int(pp) > 9:
                yy_20 = pl+'-20'+ pp
                Diagnosis.objects.filter(id=i.id).update(years=yy_20)

from health_management.models import *
from datetime import datetime
dgs = Diagnosis.objects.filter()
for i in dgs:
    if i.years:
        pp = i.years.split('-')[1]
        pl = i.years.split('-')[0]
        dby_date = '01-'+i.years
        date = datetime.strptime(dby_date, '%d-%m-%Y').date()
        print(i.id, dby_date)
        dgs = Diagnosis.objects.filter(id=i.id).update(detected_years=date)




            
    # if len(i.years) > 5:
    #     mm_yy = i.years[:3]+i.years[-2:]
    #     print(mm_yy)
        # Diagnosis.objects.filter(id=i.id).update(years=mm_yy)

from health_management.models import *
dgs = Diagnosis.objects.filter()
for i in dgs:
    if i.years:
        mm_yy = i.years[-2:]
        if int(mm_yy) > 23:
            yy_19 = '19'+ mm_yy
            Diagnosis.objects.filter(id=i.id).update(years=yy_19)
        if int(mm_yy) < 24:
            yy_20 = '20'+ mm_yy
            Diagnosis.objects.filter(id=i.id).update(years=yy_20)



from health_management.models import *
from datetime import date
from dateutil.relativedelta import relativedelta
current_date = date(2023, 1, 1)
pts=Patients.objects.filter(dob__isnull=True)
for pt in pts:
    if pt.age:
        future_date = current_date - relativedelta(years=pt.age)
        Patients.objects.filter(id=pt.id).update(dob=future_date)

        print(future_date)
        
            






        